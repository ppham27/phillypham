include ../mixins/postView.jade

extends ../layout

block content
  h1= title
  - var temporaryPost = locals.temporaryPost || {}
  - var tags = temporaryPost.Tags || []
  - tags = tags.map(function(tag) { return tag.name; })
  form#post-form(method="POST", action="/post")
    .wmd-panel
      fieldset
        label(for="title") Title:
        input#wmd-input-title.text-input.wmd-input-title(type="text", name="title", placeholder="Enter a title here", value=temporaryPost.title || '', autofocus=true)
      fieldset
        label(for="photoUrl") Photo URL:
        input.text-input(type="text", name="photoUrl", placeholder="Enter photo URL here", value=temporaryPost.photoUrl || '')
      #wmd-button-bar.wmd-button-bar
      #wmd-editor.wmd-editor.tex2jax_ignore= temporaryPost.body || ''
      textarea(name="body")#wmd-input.wmd-input= temporaryPost.body || ''
    +postView(temporaryPost, true)
    .wmd-panel
      fieldset
        label(for="tags") Tags:
        input.text-input(type="text", name="tags", placeholder="Enter tags here separated by commas", value=tags.join(', '))
      button.submit-button.save(type="submit", disabled=true) Save
        .overlay
      if locals.edit
        if temporaryPost.published
          button.submit-button.unpublish(type="submit", disabled=true) Unpublish
            .overlay
        else
          button.submit-button.publish(type="submit", disabled=true) Post
            .overlay
        button.submit-button.destroy(type="submit", disabled=true) Destroy
          .overlay
      else
        button.submit-button.publish(type="submit", disabled=true) Post
          .overlay
append body  
  script.
    document.querySelector('#post-form input[name="title"]').addEventListener('keydown', disableEnterSubmit, false);
    document.querySelector('#post-form input[name="tags"]').addEventListener('keydown', disableEnterSubmit, false);
    function disableEnterSubmit(event) { if (event.keyCode === 13) event.preventDefault(); }
    document.querySelector('#post-form input[name="photoUrl"]')
    .addEventListener('input', function() {
      var img = document.querySelector('.post-img');
      if (this.value) {
        img.src = this.value;
        img.style.display = 'block';
      } else {
        img.style.display = 'none';
      }
    });
    document.querySelector('#post-form input[name="tags"]')
    .addEventListener('input', function() {
      var tagMeta = document.querySelector('.post-meta.tags');
      if (!this.value) {
        tagMeta.parentNode.style.display = 'none';
      } else {
        tagMeta.parentNode.style.display = 'block';
        tagMeta.textContent = this.value.split(',').map(function(tag) { return tag.toLowerCase().trim(); }).join(', ');
      }
    });
    function formToJSON(form) {
      var json = {};
      // inputs
      ['title', 'photoUrl', 'tags'].forEach(function(key) {
        if (key === 'tags') {
          var tags = form.querySelector('input[name="' + key + '"]').value;
          json[key] = tags.split(',').map(function(tag) { return tag.toLowerCase().trim(); });
        } else {
          json[key] = form.querySelector('input[name="' + key + '"]').value;
        }
      });
      // textareas
      ['body'].forEach(function(key) {
        json[key] = form.querySelector('textarea[name="' + key + '"]').value;
      });
      return json;
    }
    function onRequestLoad(response) {
      if (response.success) {
        if (response.redirect) {
          window.location.href = response.redirectLink;
        } else {
          flash(response.message, {reset: true, className: 'info'});
        }        
      } else {
        flash(response.error, {reset: true, className: 'error'});
      }
      var flashBox = document.getElementById('flash');
      if (flashBox) flashBox.scrollIntoView();
    }
  script
    include ../../public/javascripts/flash.js
  if locals.edit
    script.
      var saveButton = document.querySelector('.submit-button.save');
      var publishButton = document.querySelector('.submit-button.publish') || document.querySelector('.submit-button.unpublish');
      var destroyButton = document.querySelector('.submit-button.destroy');
      var putRequest = new XMLHttpRequest();
      var deleteRequest = new XMLHttpRequest();      
      putRequest.addEventListener('load', function() {
        var response = typeof this.response === 'string' ? JSON.parse(this.response) : this.response;
        onRequestLoad(response);
        saveButton.disabled = false;
        destroyButton.disabled = false;
        publishButton.disabled = false;
      });
      deleteRequest.addEventListener('load', function() {
        var response = typeof this.response === 'string' ? JSON.parse(this.response) : this.response;
        onRequestLoad(response);
        saveButton.disabled = false;
        destroyButton.disabled = false;
        publishButton.disabled = false;
      });
      saveButton.addEventListener('click', function() {
        saveButton.disabled = true;
        destroyButton.disabled = true;
        publishButton.disabled = true;
        putRequest.abort();
        putRequest.open('PUT', window.location.pathname);
        putRequest.setRequestHeader('Accept', 'application/json');
        putRequest.setRequestHeader('Content-Type', 'application/json');
        putRequest.responseType = 'json';
        putRequest.send(JSON.stringify(formToJSON(document.getElementById('post-form'))));
        return false;
      });
      publishButton.addEventListener('click', function() {
        saveButton.disabled = true;
        destroyButton.disabled = true;
        publishButton.disabled = true;
        putRequest.abort();
        putRequest.open('PUT', window.location.pathname);
        putRequest.setRequestHeader('Accept', 'application/json');
        putRequest.setRequestHeader('Content-Type', 'application/json');
        putRequest.responseType = 'json';
        var json = formToJSON(document.getElementById('post-form'));
        json.published = document.querySelector('button.submit-button.publish') !== null;
        putRequest.send(JSON.stringify(json));
        return false;
      });
      destroyButton.addEventListener('click', function() {
        saveButton.disabled = true;
        destroyButton.disabled = true;
        publishButton.disabled = true;
        deleteRequest.abort();
        deleteRequest.open('DELETE', window.location.pathname);
        deleteRequest.setRequestHeader('Accept', 'application/json');
        deleteRequest.setRequestHeader('Content-Type', 'application/json');
        deleteRequest.responseType = 'json';
        deleteRequest.send();
        return false;
      });
      saveButton.disabled = false;
      destroyButton.disabled = false;
      publishButton.disabled = false;
  else
    script.
      var saveButton = document.querySelector('.submit-button.save');
      var publishButton = document.querySelector('.submit-button.publish');
      var postRequest = new XMLHttpRequest();      
      postRequest.addEventListener('load', function() {
        var response = typeof this.response === 'string' ? JSON.parse(this.response) : this.response;
        onRequestLoad(response);
        saveButton.disabled = false;
        publishButton.disabled = false;
      });
      saveButton.addEventListener('click', function() {
        saveButton.disabled = true;
        publishButton.disabled = true;
        postRequest.abort();
        postRequest.open('POST', window.location.pathname);
        postRequest.setRequestHeader('Accept', 'application/json');
        postRequest.setRequestHeader('Content-Type', 'application/json');
        postRequest.responseType = 'json';
        postRequest.send(JSON.stringify(formToJSON(document.getElementById('post-form'))));
        return false;
      });
      publishButton.addEventListener('click', function() {
        saveButton.disabled = true;
        publishButton.disabled = true;
        postRequest.abort();
        postRequest.open('POST', window.location.pathname);
        postRequest.setRequestHeader('Accept', 'application/json');
        postRequest.setRequestHeader('Content-Type', 'application/json');
        postRequest.responseType = 'json';
        var json = formToJSON(document.getElementById('post-form'));
        json.published = true;
        postRequest.send(JSON.stringify(json));
        return false;
      });
      saveButton.disabled = false;
      publishButton.disabled = false;
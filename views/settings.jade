mixin settingsFieldSet(label, name, value, placeholder)
  fieldset(class=name)
    label(for=name)= label + ':'
    input.text-input(type="text", name=name, value=value, placeholder=placeholder)

extends layout

block content
  h1= title
  form#application-settings-form(action="POST", onsubmit="return false;")
    .wmd-panel
      h2 Sidebar Content
      fieldset
        label(for="sidebar:title") Sidebar Title:
        input#wmd-input-title-sidebar.text-input.wmd-input-title(type="text", name="sidebar:title", placeholder="Enter a title here", value=settings.ApplicationSettings['sidebar:title'])
      #wmd-button-bar-sidebar.wmd-button-bar
      #wmd-editor-sidebar.wmd-editor.tex2jax_ignore= settings.ApplicationSettings['sidebar:info']
      textarea(name="sidebar:info")#wmd-input-sidebar.wmd-input= settings.ApplicationSettings['sidebar:info']
      +settingsFieldSet('Sidebar Photo', 'sidebar:photoUrl', settings.ApplicationSettings['sidebar:photoUrl'], 'URL to photo')
      hr
      h2 Contact Information
      +settingsFieldSet('Email', 'contact:email', settings.ApplicationSettings['contact:email'], 'Email address')
      +settingsFieldSet('Facebook', 'contact:facebook', settings.ApplicationSettings['contact:facebook'], 'Facebook username')
      +settingsFieldSet('Instagram', 'contact:instagram', settings.ApplicationSettings['contact:instagram'], 'Instagram username')
      +settingsFieldSet('Twitter', 'contact:twitter', settings.ApplicationSettings['contact:twitter'], 'Twitter username')
      hr
      h2 Menu
      +settingsFieldSet('Data Viz', 'menu:dataViz', settings.ApplicationSettings['menu:dataViz'], 'URL to data visualizations')
      +settingsFieldSet('Résumé', 'menu:resume', settings.ApplicationSettings['menu:resume'], 'URL to résumé')
      hr
      h2 Blog
      +settingsFieldSet('Posts per Page', 'blog:postsPerPage', settings.ApplicationSettings['blog:postsPerPage'], 'Posts per page')
      h3 Tags
      p Each line should contain a label and tag separated by a comma.
      #wmd-button-bar-tags.wmd-button-bar
      - var tagList = JSON.parse(settings.ApplicationSettings['blog:tags']).map(function(tag) { return tag.join(',') }).join('\n')
      #wmd-editor-tags.wmd-editor.tex2jax_ignore=tagList
      textarea(name="blog:tags")#wmd-input-tags.wmd-input=tagList
      #wmd-preview-tags(style={display: "none"})
      h3 Authors
      p Each line should contain a label and the author's display name separated by a comma.
      #wmd-button-bar-authors.wmd-button-bar
      - var authorList = JSON.parse(settings.ApplicationSettings['blog:authors']).map(function(author) { return author.join(',') }).join('\n')
      #wmd-editor-authors.wmd-editor.tex2jax_ignore=authorList
      textarea(name="blog:authors")#wmd-input-authors.wmd-input=authorList
      #wmd-preview-authors(style={display: "none"})
    .wmd-panel.buttons
      button.submit-button(disabled=true, type="submit") Update
        .overlay      
append body
  script
    include ../public/javascripts/flash.js
  script.
    var photoUrl = document.getElementById('application-settings-form').querySelector('input[name="sidebar:photoUrl"]');
    photoUrl.addEventListener('input', function(event) {
      document.getElementById('sidebar-photo').src = this.value || '/images/default-profile.jpg';
    });

    var submitButton = document.querySelector('#application-settings-form .submit-button');
    var updateRequest = new XMLHttpRequest();    
    updateRequest.addEventListener('load', function() {
      var response = typeof this.response === 'string' ? JSON.parse(this.response) : this.response;
      if (response.success) {
        flash('Application settings have been updated!', {reset: true, className: 'info'});
      } else {
        flash(response.error, {reset: true, className: 'error'});
      }
      var flashBox = document.getElementById('flash');
      if (flashBox) flashBox.scrollIntoView();
      submitButton.disabled = false;
    });
    submitButton.addEventListener('click', function() {
      submitButton.disabled = true;
      updateRequest.abort();
      updateRequest.open('PUT', window.location.pathname);
      updateRequest.setRequestHeader('Accept', 'application/json');
      updateRequest.setRequestHeader('Content-Type', 'application/json');
      updateRequest.responseType = 'json';
      var data = {};
      ['sidebar:info', 'sidebar:photoUrl', 'sidebar:title',
       'contact:email', 'contact:facebook', 'contact:instagram', 'contact:twitter',
       'menu:dataViz', 'menu:resume', 'blog:postsPerPage',
       'blog:tags', 'blog:authors'].forEach(function(key) {
        if (key === 'blog:postsPerPage') {
          data[key] = parseInt(getValue(key));
        } else if (key === 'blog:tags' || key === 'blog:authors') {
          data[key] = processList(getValue(key));
        } else {
          data[key] = getValue(key);
        }
      });
      updateRequest.send(JSON.stringify(data));
      function getValue(name) {
        if (name === 'sidebar:info' || name === 'blog:tags' || name === 'blog:authors') {
          var textarea = document.querySelector('textarea[name="' + name + '"]');
          return textarea.value;
        }
        var input = document.querySelector('input[name="' + name + '"]');
        return input.value;        
      }
    }); 
    submitButton.disabled = false;
    function processList(list) {
      var splitList = list.split('\n');
      var items = splitList.filter(function(item) {
        return item.trim() !== "";
      }).map(function(item) {
        return item.split(',').map(function(d) {
          return d.trim();
        });
      }).filter(function(item) {
        return item.length === 2 && item[0] && item[1];
      });
      return items;
    }  